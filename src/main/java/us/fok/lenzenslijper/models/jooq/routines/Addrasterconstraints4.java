/**
 * This class is generated by jOOQ
 */
package us.fok.lenzenslijper.models.jooq.routines;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Addrasterconstraints4 extends org.jooq.impl.AbstractRoutine<java.lang.Boolean> {

	private static final long serialVersionUID = -1661833942;

	/**
	 * The parameter <code>public.addrasterconstraints.RETURN_VALUE</code>.
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * The parameter <code>public.addrasterconstraints.rasttable</code>.
	 */
	public static final org.jooq.Parameter<java.lang.String> RASTTABLE = createParameter("rasttable", org.jooq.impl.SQLDataType.VARCHAR);

	/**
	 * The parameter <code>public.addrasterconstraints.rastcolumn</code>.
	 */
	public static final org.jooq.Parameter<java.lang.String> RASTCOLUMN = createParameter("rastcolumn", org.jooq.impl.SQLDataType.VARCHAR);

	/**
	 * The parameter <code>public.addrasterconstraints.srid</code>.
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> SRID = createParameter("srid", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * The parameter <code>public.addrasterconstraints.scale_x</code>.
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> SCALE_X = createParameter("scale_x", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * The parameter <code>public.addrasterconstraints.scale_y</code>.
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> SCALE_Y = createParameter("scale_y", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * The parameter <code>public.addrasterconstraints.blocksize_x</code>.
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> BLOCKSIZE_X = createParameter("blocksize_x", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * The parameter <code>public.addrasterconstraints.blocksize_y</code>.
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> BLOCKSIZE_Y = createParameter("blocksize_y", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * The parameter <code>public.addrasterconstraints.same_alignment</code>.
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> SAME_ALIGNMENT = createParameter("same_alignment", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * The parameter <code>public.addrasterconstraints.regular_blocking</code>.
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> REGULAR_BLOCKING = createParameter("regular_blocking", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * The parameter <code>public.addrasterconstraints.num_bands</code>.
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> NUM_BANDS = createParameter("num_bands", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * The parameter <code>public.addrasterconstraints.pixel_types</code>.
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> PIXEL_TYPES = createParameter("pixel_types", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * The parameter <code>public.addrasterconstraints.nodata_values</code>.
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> NODATA_VALUES = createParameter("nodata_values", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * The parameter <code>public.addrasterconstraints.out_db</code>.
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> OUT_DB = createParameter("out_db", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * The parameter <code>public.addrasterconstraints.extent</code>.
	 */
	public static final org.jooq.Parameter<java.lang.Boolean> EXTENT = createParameter("extent", org.jooq.impl.SQLDataType.BOOLEAN);

	/**
	 * Create a new routine call instance
	 */
	public Addrasterconstraints4() {
		super("addrasterconstraints", us.fok.lenzenslijper.models.jooq.Public.PUBLIC, org.jooq.impl.SQLDataType.BOOLEAN);

		setReturnParameter(RETURN_VALUE);
		addInParameter(RASTTABLE);
		addInParameter(RASTCOLUMN);
		addInParameter(SRID);
		addInParameter(SCALE_X);
		addInParameter(SCALE_Y);
		addInParameter(BLOCKSIZE_X);
		addInParameter(BLOCKSIZE_Y);
		addInParameter(SAME_ALIGNMENT);
		addInParameter(REGULAR_BLOCKING);
		addInParameter(NUM_BANDS);
		addInParameter(PIXEL_TYPES);
		addInParameter(NODATA_VALUES);
		addInParameter(OUT_DB);
		addInParameter(EXTENT);
		setOverloaded(true);
	}

	/**
	 * Set the <code>rasttable</code> parameter IN value to the routine
	 */
	public void setRasttable(java.lang.String value) {
		setValue(us.fok.lenzenslijper.models.jooq.routines.Addrasterconstraints4.RASTTABLE, value);
	}

	/**
	 * Set the <code>rasttable</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setRasttable(org.jooq.Field<java.lang.String> field) {
		setField(RASTTABLE, field);
	}

	/**
	 * Set the <code>rastcolumn</code> parameter IN value to the routine
	 */
	public void setRastcolumn(java.lang.String value) {
		setValue(us.fok.lenzenslijper.models.jooq.routines.Addrasterconstraints4.RASTCOLUMN, value);
	}

	/**
	 * Set the <code>rastcolumn</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setRastcolumn(org.jooq.Field<java.lang.String> field) {
		setField(RASTCOLUMN, field);
	}

	/**
	 * Set the <code>srid</code> parameter IN value to the routine
	 */
	public void setSrid(java.lang.Boolean value) {
		setValue(us.fok.lenzenslijper.models.jooq.routines.Addrasterconstraints4.SRID, value);
	}

	/**
	 * Set the <code>srid</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setSrid(org.jooq.Field<java.lang.Boolean> field) {
		setField(SRID, field);
	}

	/**
	 * Set the <code>scale_x</code> parameter IN value to the routine
	 */
	public void setScaleX(java.lang.Boolean value) {
		setValue(us.fok.lenzenslijper.models.jooq.routines.Addrasterconstraints4.SCALE_X, value);
	}

	/**
	 * Set the <code>scale_x</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setScaleX(org.jooq.Field<java.lang.Boolean> field) {
		setField(SCALE_X, field);
	}

	/**
	 * Set the <code>scale_y</code> parameter IN value to the routine
	 */
	public void setScaleY(java.lang.Boolean value) {
		setValue(us.fok.lenzenslijper.models.jooq.routines.Addrasterconstraints4.SCALE_Y, value);
	}

	/**
	 * Set the <code>scale_y</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setScaleY(org.jooq.Field<java.lang.Boolean> field) {
		setField(SCALE_Y, field);
	}

	/**
	 * Set the <code>blocksize_x</code> parameter IN value to the routine
	 */
	public void setBlocksizeX(java.lang.Boolean value) {
		setValue(us.fok.lenzenslijper.models.jooq.routines.Addrasterconstraints4.BLOCKSIZE_X, value);
	}

	/**
	 * Set the <code>blocksize_x</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setBlocksizeX(org.jooq.Field<java.lang.Boolean> field) {
		setField(BLOCKSIZE_X, field);
	}

	/**
	 * Set the <code>blocksize_y</code> parameter IN value to the routine
	 */
	public void setBlocksizeY(java.lang.Boolean value) {
		setValue(us.fok.lenzenslijper.models.jooq.routines.Addrasterconstraints4.BLOCKSIZE_Y, value);
	}

	/**
	 * Set the <code>blocksize_y</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setBlocksizeY(org.jooq.Field<java.lang.Boolean> field) {
		setField(BLOCKSIZE_Y, field);
	}

	/**
	 * Set the <code>same_alignment</code> parameter IN value to the routine
	 */
	public void setSameAlignment(java.lang.Boolean value) {
		setValue(us.fok.lenzenslijper.models.jooq.routines.Addrasterconstraints4.SAME_ALIGNMENT, value);
	}

	/**
	 * Set the <code>same_alignment</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setSameAlignment(org.jooq.Field<java.lang.Boolean> field) {
		setField(SAME_ALIGNMENT, field);
	}

	/**
	 * Set the <code>regular_blocking</code> parameter IN value to the routine
	 */
	public void setRegularBlocking(java.lang.Boolean value) {
		setValue(us.fok.lenzenslijper.models.jooq.routines.Addrasterconstraints4.REGULAR_BLOCKING, value);
	}

	/**
	 * Set the <code>regular_blocking</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setRegularBlocking(org.jooq.Field<java.lang.Boolean> field) {
		setField(REGULAR_BLOCKING, field);
	}

	/**
	 * Set the <code>num_bands</code> parameter IN value to the routine
	 */
	public void setNumBands(java.lang.Boolean value) {
		setValue(us.fok.lenzenslijper.models.jooq.routines.Addrasterconstraints4.NUM_BANDS, value);
	}

	/**
	 * Set the <code>num_bands</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setNumBands(org.jooq.Field<java.lang.Boolean> field) {
		setField(NUM_BANDS, field);
	}

	/**
	 * Set the <code>pixel_types</code> parameter IN value to the routine
	 */
	public void setPixelTypes(java.lang.Boolean value) {
		setValue(us.fok.lenzenslijper.models.jooq.routines.Addrasterconstraints4.PIXEL_TYPES, value);
	}

	/**
	 * Set the <code>pixel_types</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setPixelTypes(org.jooq.Field<java.lang.Boolean> field) {
		setField(PIXEL_TYPES, field);
	}

	/**
	 * Set the <code>nodata_values</code> parameter IN value to the routine
	 */
	public void setNodataValues(java.lang.Boolean value) {
		setValue(us.fok.lenzenslijper.models.jooq.routines.Addrasterconstraints4.NODATA_VALUES, value);
	}

	/**
	 * Set the <code>nodata_values</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setNodataValues(org.jooq.Field<java.lang.Boolean> field) {
		setField(NODATA_VALUES, field);
	}

	/**
	 * Set the <code>out_db</code> parameter IN value to the routine
	 */
	public void setOutDb(java.lang.Boolean value) {
		setValue(us.fok.lenzenslijper.models.jooq.routines.Addrasterconstraints4.OUT_DB, value);
	}

	/**
	 * Set the <code>out_db</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setOutDb(org.jooq.Field<java.lang.Boolean> field) {
		setField(OUT_DB, field);
	}

	/**
	 * Set the <code>extent</code> parameter IN value to the routine
	 */
	public void setExtent(java.lang.Boolean value) {
		setValue(us.fok.lenzenslijper.models.jooq.routines.Addrasterconstraints4.EXTENT, value);
	}

	/**
	 * Set the <code>extent</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setExtent(org.jooq.Field<java.lang.Boolean> field) {
		setField(EXTENT, field);
	}
}
