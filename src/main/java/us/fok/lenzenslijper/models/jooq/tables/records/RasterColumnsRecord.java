/**
 * This class is generated by jOOQ
 */
package us.fok.lenzenslijper.models.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RasterColumnsRecord extends org.jooq.impl.TableRecordImpl<us.fok.lenzenslijper.models.jooq.tables.records.RasterColumnsRecord> implements org.jooq.Record16<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Double, java.lang.Double, java.lang.Integer, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.String[], java.lang.Double[], java.lang.Boolean[], java.lang.Object> {

	private static final long serialVersionUID = -916992206;

	/**
	 * Setter for <code>public.raster_columns.r_table_catalog</code>.
	 */
	public void setRTableCatalog(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.raster_columns.r_table_catalog</code>.
	 */
	public java.lang.String getRTableCatalog() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>public.raster_columns.r_table_schema</code>.
	 */
	public void setRTableSchema(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.raster_columns.r_table_schema</code>.
	 */
	public java.lang.String getRTableSchema() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>public.raster_columns.r_table_name</code>.
	 */
	public void setRTableName(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.raster_columns.r_table_name</code>.
	 */
	public java.lang.String getRTableName() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>public.raster_columns.r_raster_column</code>.
	 */
	public void setRRasterColumn(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.raster_columns.r_raster_column</code>.
	 */
	public java.lang.String getRRasterColumn() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>public.raster_columns.srid</code>.
	 */
	public void setSrid(java.lang.Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.raster_columns.srid</code>.
	 */
	public java.lang.Integer getSrid() {
		return (java.lang.Integer) getValue(4);
	}

	/**
	 * Setter for <code>public.raster_columns.scale_x</code>.
	 */
	public void setScaleX(java.lang.Double value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.raster_columns.scale_x</code>.
	 */
	public java.lang.Double getScaleX() {
		return (java.lang.Double) getValue(5);
	}

	/**
	 * Setter for <code>public.raster_columns.scale_y</code>.
	 */
	public void setScaleY(java.lang.Double value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.raster_columns.scale_y</code>.
	 */
	public java.lang.Double getScaleY() {
		return (java.lang.Double) getValue(6);
	}

	/**
	 * Setter for <code>public.raster_columns.blocksize_x</code>.
	 */
	public void setBlocksizeX(java.lang.Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.raster_columns.blocksize_x</code>.
	 */
	public java.lang.Integer getBlocksizeX() {
		return (java.lang.Integer) getValue(7);
	}

	/**
	 * Setter for <code>public.raster_columns.blocksize_y</code>.
	 */
	public void setBlocksizeY(java.lang.Integer value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>public.raster_columns.blocksize_y</code>.
	 */
	public java.lang.Integer getBlocksizeY() {
		return (java.lang.Integer) getValue(8);
	}

	/**
	 * Setter for <code>public.raster_columns.same_alignment</code>.
	 */
	public void setSameAlignment(java.lang.Boolean value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>public.raster_columns.same_alignment</code>.
	 */
	public java.lang.Boolean getSameAlignment() {
		return (java.lang.Boolean) getValue(9);
	}

	/**
	 * Setter for <code>public.raster_columns.regular_blocking</code>.
	 */
	public void setRegularBlocking(java.lang.Boolean value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>public.raster_columns.regular_blocking</code>.
	 */
	public java.lang.Boolean getRegularBlocking() {
		return (java.lang.Boolean) getValue(10);
	}

	/**
	 * Setter for <code>public.raster_columns.num_bands</code>.
	 */
	public void setNumBands(java.lang.Integer value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>public.raster_columns.num_bands</code>.
	 */
	public java.lang.Integer getNumBands() {
		return (java.lang.Integer) getValue(11);
	}

	/**
	 * Setter for <code>public.raster_columns.pixel_types</code>.
	 */
	public void setPixelTypes(java.lang.String[] value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>public.raster_columns.pixel_types</code>.
	 */
	public java.lang.String[] getPixelTypes() {
		return (java.lang.String[]) getValue(12);
	}

	/**
	 * Setter for <code>public.raster_columns.nodata_values</code>.
	 */
	public void setNodataValues(java.lang.Double[] value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>public.raster_columns.nodata_values</code>.
	 */
	public java.lang.Double[] getNodataValues() {
		return (java.lang.Double[]) getValue(13);
	}

	/**
	 * Setter for <code>public.raster_columns.out_db</code>.
	 */
	public void setOutDb(java.lang.Boolean[] value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>public.raster_columns.out_db</code>.
	 */
	public java.lang.Boolean[] getOutDb() {
		return (java.lang.Boolean[]) getValue(14);
	}

	/**
	 * Setter for <code>public.raster_columns.extent</code>.
	 */
	public void setExtent(java.lang.Object value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>public.raster_columns.extent</code>.
	 */
	public java.lang.Object getExtent() {
		return (java.lang.Object) getValue(15);
	}

	// -------------------------------------------------------------------------
	// Record16 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row16<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Double, java.lang.Double, java.lang.Integer, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.String[], java.lang.Double[], java.lang.Boolean[], java.lang.Object> fieldsRow() {
		return (org.jooq.Row16) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row16<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Double, java.lang.Double, java.lang.Integer, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.String[], java.lang.Double[], java.lang.Boolean[], java.lang.Object> valuesRow() {
		return (org.jooq.Row16) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.R_TABLE_CATALOG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.R_TABLE_SCHEMA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.R_TABLE_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.R_RASTER_COLUMN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field5() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.SRID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Double> field6() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.SCALE_X;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Double> field7() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.SCALE_Y;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field8() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.BLOCKSIZE_X;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field9() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.BLOCKSIZE_Y;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field10() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.SAME_ALIGNMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field11() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.REGULAR_BLOCKING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field12() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.NUM_BANDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String[]> field13() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.PIXEL_TYPES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Double[]> field14() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.NODATA_VALUES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean[]> field15() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.OUT_DB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Object> field16() {
		return us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS.EXTENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getRTableCatalog();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getRTableSchema();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getRTableName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getRRasterColumn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return getSrid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Double value6() {
		return getScaleX();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Double value7() {
		return getScaleY();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value8() {
		return getBlocksizeX();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value9() {
		return getBlocksizeY();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value10() {
		return getSameAlignment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value11() {
		return getRegularBlocking();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value12() {
		return getNumBands();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String[] value13() {
		return getPixelTypes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Double[] value14() {
		return getNodataValues();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean[] value15() {
		return getOutDb();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Object value16() {
		return getExtent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value1(java.lang.String value) {
		setRTableCatalog(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value2(java.lang.String value) {
		setRTableSchema(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value3(java.lang.String value) {
		setRTableName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value4(java.lang.String value) {
		setRRasterColumn(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value5(java.lang.Integer value) {
		setSrid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value6(java.lang.Double value) {
		setScaleX(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value7(java.lang.Double value) {
		setScaleY(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value8(java.lang.Integer value) {
		setBlocksizeX(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value9(java.lang.Integer value) {
		setBlocksizeY(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value10(java.lang.Boolean value) {
		setSameAlignment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value11(java.lang.Boolean value) {
		setRegularBlocking(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value12(java.lang.Integer value) {
		setNumBands(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value13(java.lang.String[] value) {
		setPixelTypes(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value14(java.lang.Double[] value) {
		setNodataValues(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value15(java.lang.Boolean[] value) {
		setOutDb(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord value16(java.lang.Object value) {
		setExtent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RasterColumnsRecord values(java.lang.String value1, java.lang.String value2, java.lang.String value3, java.lang.String value4, java.lang.Integer value5, java.lang.Double value6, java.lang.Double value7, java.lang.Integer value8, java.lang.Integer value9, java.lang.Boolean value10, java.lang.Boolean value11, java.lang.Integer value12, java.lang.String[] value13, java.lang.Double[] value14, java.lang.Boolean[] value15, java.lang.Object value16) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached RasterColumnsRecord
	 */
	public RasterColumnsRecord() {
		super(us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS);
	}

	/**
	 * Create a detached, initialised RasterColumnsRecord
	 */
	public RasterColumnsRecord(java.lang.String rTableCatalog, java.lang.String rTableSchema, java.lang.String rTableName, java.lang.String rRasterColumn, java.lang.Integer srid, java.lang.Double scaleX, java.lang.Double scaleY, java.lang.Integer blocksizeX, java.lang.Integer blocksizeY, java.lang.Boolean sameAlignment, java.lang.Boolean regularBlocking, java.lang.Integer numBands, java.lang.String[] pixelTypes, java.lang.Double[] nodataValues, java.lang.Boolean[] outDb, java.lang.Object extent) {
		super(us.fok.lenzenslijper.models.jooq.tables.RasterColumns.RASTER_COLUMNS);

		setValue(0, rTableCatalog);
		setValue(1, rTableSchema);
		setValue(2, rTableName);
		setValue(3, rRasterColumn);
		setValue(4, srid);
		setValue(5, scaleX);
		setValue(6, scaleY);
		setValue(7, blocksizeX);
		setValue(8, blocksizeY);
		setValue(9, sameAlignment);
		setValue(10, regularBlocking);
		setValue(11, numBands);
		setValue(12, pixelTypes);
		setValue(13, nodataValues);
		setValue(14, outDb);
		setValue(15, extent);
	}
}
