/**
 * This class is generated by jOOQ
 */
package us.fok.lenzenslijper.models.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RevisionsRecord extends org.jooq.impl.UpdatableRecordImpl<us.fok.lenzenslijper.models.jooq.tables.records.RevisionsRecord> implements org.jooq.Record8<java.util.UUID, java.util.UUID, java.util.UUID, java.sql.Timestamp, java.util.UUID, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> {

	private static final long serialVersionUID = 371727656;

	/**
	 * Setter for <code>public.revisions.revision_id</code>.
	 */
	public void setRevisionId(java.util.UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.revisions.revision_id</code>.
	 */
	public java.util.UUID getRevisionId() {
		return (java.util.UUID) getValue(0);
	}

	/**
	 * Setter for <code>public.revisions.document_id</code>.
	 */
	public void setDocumentId(java.util.UUID value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.revisions.document_id</code>.
	 */
	public java.util.UUID getDocumentId() {
		return (java.util.UUID) getValue(1);
	}

	/**
	 * Setter for <code>public.revisions.parent_revision_id</code>.
	 */
	public void setParentRevisionId(java.util.UUID value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.revisions.parent_revision_id</code>.
	 */
	public java.util.UUID getParentRevisionId() {
		return (java.util.UUID) getValue(2);
	}

	/**
	 * Setter for <code>public.revisions.created</code>.
	 */
	public void setCreated(java.sql.Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.revisions.created</code>.
	 */
	public java.sql.Timestamp getCreated() {
		return (java.sql.Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>public.revisions.user_id</code>.
	 */
	public void setUserId(java.util.UUID value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.revisions.user_id</code>.
	 */
	public java.util.UUID getUserId() {
		return (java.util.UUID) getValue(4);
	}

	/**
	 * Setter for <code>public.revisions.comments</code>.
	 */
	public void setComments(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.revisions.comments</code>.
	 */
	public java.lang.String getComments() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>public.revisions.row_created</code>.
	 */
	public void setRowCreated(java.sql.Timestamp value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.revisions.row_created</code>.
	 */
	public java.sql.Timestamp getRowCreated() {
		return (java.sql.Timestamp) getValue(6);
	}

	/**
	 * Setter for <code>public.revisions.row_updated</code>.
	 */
	public void setRowUpdated(java.sql.Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.revisions.row_updated</code>.
	 */
	public java.sql.Timestamp getRowUpdated() {
		return (java.sql.Timestamp) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.util.UUID> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.util.UUID, java.util.UUID, java.util.UUID, java.sql.Timestamp, java.util.UUID, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.util.UUID, java.util.UUID, java.util.UUID, java.sql.Timestamp, java.util.UUID, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field1() {
		return us.fok.lenzenslijper.models.jooq.tables.Revisions.REVISIONS.REVISION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field2() {
		return us.fok.lenzenslijper.models.jooq.tables.Revisions.REVISIONS.DOCUMENT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field3() {
		return us.fok.lenzenslijper.models.jooq.tables.Revisions.REVISIONS.PARENT_REVISION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field4() {
		return us.fok.lenzenslijper.models.jooq.tables.Revisions.REVISIONS.CREATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field5() {
		return us.fok.lenzenslijper.models.jooq.tables.Revisions.REVISIONS.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return us.fok.lenzenslijper.models.jooq.tables.Revisions.REVISIONS.COMMENTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field7() {
		return us.fok.lenzenslijper.models.jooq.tables.Revisions.REVISIONS.ROW_CREATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field8() {
		return us.fok.lenzenslijper.models.jooq.tables.Revisions.REVISIONS.ROW_UPDATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value1() {
		return getRevisionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value2() {
		return getDocumentId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value3() {
		return getParentRevisionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value4() {
		return getCreated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value5() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getComments();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value7() {
		return getRowCreated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value8() {
		return getRowUpdated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RevisionsRecord value1(java.util.UUID value) {
		setRevisionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RevisionsRecord value2(java.util.UUID value) {
		setDocumentId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RevisionsRecord value3(java.util.UUID value) {
		setParentRevisionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RevisionsRecord value4(java.sql.Timestamp value) {
		setCreated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RevisionsRecord value5(java.util.UUID value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RevisionsRecord value6(java.lang.String value) {
		setComments(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RevisionsRecord value7(java.sql.Timestamp value) {
		setRowCreated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RevisionsRecord value8(java.sql.Timestamp value) {
		setRowUpdated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RevisionsRecord values(java.util.UUID value1, java.util.UUID value2, java.util.UUID value3, java.sql.Timestamp value4, java.util.UUID value5, java.lang.String value6, java.sql.Timestamp value7, java.sql.Timestamp value8) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached RevisionsRecord
	 */
	public RevisionsRecord() {
		super(us.fok.lenzenslijper.models.jooq.tables.Revisions.REVISIONS);
	}

	/**
	 * Create a detached, initialised RevisionsRecord
	 */
	public RevisionsRecord(java.util.UUID revisionId, java.util.UUID documentId, java.util.UUID parentRevisionId, java.sql.Timestamp created, java.util.UUID userId, java.lang.String comments, java.sql.Timestamp rowCreated, java.sql.Timestamp rowUpdated) {
		super(us.fok.lenzenslijper.models.jooq.tables.Revisions.REVISIONS);

		setValue(0, revisionId);
		setValue(1, documentId);
		setValue(2, parentRevisionId);
		setValue(3, created);
		setValue(4, userId);
		setValue(5, comments);
		setValue(6, rowCreated);
		setValue(7, rowUpdated);
	}
}
